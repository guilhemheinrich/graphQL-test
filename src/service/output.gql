
            interface Germplasm_I  {
                fromInstitute: Thing @relationship(type: "oeso:fromInstitute", direction: OUT)
            } 

            type Germplasm implements Germplasm_I {
                fromInstitute: Thing @relationship(type: "oeso:fromInstitute", direction: OUT)
            }            
            
            interface Variable_Iimplements VariableBase_I {
                hasCharacteristic: Characteristic @relationship(type: "oeso:hasCharacteristic", direction: OUT)
                hasEntity: Entity @relationship(type: "oeso:hasEntity", direction: OUT)
                hasMethod: Method @relationship(type: "oeso:hasMethod", direction: OUT)
                hasUnit: Unit @relationship(type: "oeso:hasUnit", direction: OUT)
            } 

            type Variable implements Variable_I & VariableBase_I @node(additionalLabels: ["VariableBase"]){
                hasCharacteristic: Characteristic @relationship(type: "oeso:hasCharacteristic", direction: OUT)
                hasEntity: Entity @relationship(type: "oeso:hasEntity", direction: OUT)
                hasMethod: Method @relationship(type: "oeso:hasMethod", direction: OUT)
                hasUnit: Unit @relationship(type: "oeso:hasUnit", direction: OUT)
            }            
            
            interface Infrastructure_Iimplements ExperimentalCondition_I {
                hasFacility: Facility @relationship(type: "oeso:hasFacility", direction: OUT)
            } 

            type Infrastructure implements Infrastructure_I & ExperimentalCondition_I @node(additionalLabels: ["ExperimentalCondition"]){
                hasFacility: Facility @relationship(type: "oeso:hasFacility", direction: OUT)
            }            
            
            interface ScientificObject_I  {
                
            } 

            type ScientificObject implements ScientificObject_I {
                
            }            
            
            interface Experiment_I  {
                hasInfrastructure: Infrastructure @relationship(type: "oeso:hasInfrastructure", direction: OUT)
                hasProject: Project @relationship(type: "oeso:hasProject", direction: OUT)
                hasScientificSupervisor: Agent @relationship(type: "oeso:hasScientificSupervisor", direction: OUT)
                hasTechnicalSupervisor: Agent @relationship(type: "oeso:hasTechnicalSupervisor", direction: OUT)
                studyEffectOf: Factor @relationship(type: "oeso:studyEffectOf", direction: OUT)
            } 

            type Experiment implements Experiment_I {
                hasInfrastructure: Infrastructure @relationship(type: "oeso:hasInfrastructure", direction: OUT)
                hasProject: Project @relationship(type: "oeso:hasProject", direction: OUT)
                hasScientificSupervisor: Agent @relationship(type: "oeso:hasScientificSupervisor", direction: OUT)
                hasTechnicalSupervisor: Agent @relationship(type: "oeso:hasTechnicalSupervisor", direction: OUT)
                studyEffectOf: Factor @relationship(type: "oeso:studyEffectOf", direction: OUT)
            }            
            
            interface SensingDevice_Iimplements Device_I & Equipement_I & ExperimentalCondition_I {
                measures: Variable @relationship(type: "oeso:measures", direction: OUT)
            } 

            type SensingDevice implements SensingDevice_I & Device_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Device","Equipement","ExperimentalCondition"]){
                measures: Variable @relationship(type: "oeso:measures", direction: OUT)
            }            
            
            interface Unit_Iimplements VariableBase_I {
                hasAlternativeSymbol: String
                hasSymbol: String
            } 

            type Unit implements Unit_I & VariableBase_I @node(additionalLabels: ["VariableBase"]){
                hasAlternativeSymbol: String
                hasSymbol: String
            }            
            
            interface Project_Iimplements ExperimentalCondition_I {
                hasObjective: String
            } 

            type Project implements Project_I & ExperimentalCondition_I @node(additionalLabels: ["ExperimentalCondition"]){
                hasObjective: String
            }            
            
            interface Activity_I  {
                endedAtTime: String
                startedAtTime: String
            } 

            type Activity implements Activity_I {
                endedAtTime: String
                startedAtTime: String
            }            
            
            interface Group_I  {
                
            } 

            type Group implements Group_I {
                
            }            
            
            interface GroupUserProfile_I  {
                
            } 

            type GroupUserProfile implements GroupUserProfile_I {
                
            }            
            
            interface Profile_I  {
                
            } 

            type Profile implements Profile_I {
                
            }            
            
            interface Actuator_Iimplements Device_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type Actuator implements Actuator_I & Device_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Device","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface AdministrativeDocument_Iimplements Document_I {
                
            } 

            type AdministrativeDocument implements AdministrativeDocument_I & Document_I @node(additionalLabels: ["Document"]){
                
            }            
            
            interface Archive_Iimplements Datafile_I {
                
            } 

            type Archive implements Archive_I & Datafile_I @node(additionalLabels: ["Datafile"]){
                
            }            
            
            interface Area_Iimplements Equipement_I & ExperimentalCondition_I {
                
            } 

            type Area implements Area_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Equipement","ExperimentalCondition"]){
                
            }            
            
            interface Characteristic_Iimplements VariableBase_I {
                
            } 

            type Characteristic implements Characteristic_I & VariableBase_I @node(additionalLabels: ["VariableBase"]){
                
            }            
            
            interface ClayeyArea_Iimplements SoilArea_I & StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type ClayeyArea implements ClayeyArea_I & SoilArea_I & StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["SoilArea","StructuralArea","Area","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface Compartment_Iimplements ProtectedStructure_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type Compartment implements Compartment_I & ProtectedStructure_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["ProtectedStructure","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface Computation_Iimplements Activity_I {
                endedAtTime: String
                startedAtTime: String
            } 

            type Computation implements Computation_I & Activity_I @node(additionalLabels: ["Activity"]){
                endedAtTime: String
                startedAtTime: String
            }            
            
            interface ControlLaw_Iimplements Device_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type ControlLaw implements ControlLaw_I & Device_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Device","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface CultivatedLand_Iimplements StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type CultivatedLand implements CultivatedLand_I & StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["StructuralArea","Area","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface Datafile_I  {
                
            } 

            type Datafile implements Datafile_I {
                
            }            
            
            interface Dataset_Iimplements Document_I {
                
            } 

            type Dataset implements Dataset_I & Document_I @node(additionalLabels: ["Document"]){
                
            }            
            
            interface Device_Iimplements Equipement_I & ExperimentalCondition_I {
                
            } 

            type Device implements Device_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Equipement","ExperimentalCondition"]){
                
            }            
            
            interface Document_I  {
                
            } 

            type Document implements Document_I {
                
            }            
            
            interface ElaboratedVariable_Iimplements Variable_I & VariableBase_I {
                hasCharacteristic: Characteristic @relationship(type: "oeso:hasCharacteristic", direction: OUT)
                hasEntity: Entity @relationship(type: "oeso:hasEntity", direction: OUT)
                hasMethod: Method @relationship(type: "oeso:hasMethod", direction: OUT)
                hasUnit: Unit @relationship(type: "oeso:hasUnit", direction: OUT)
            } 

            type ElaboratedVariable implements ElaboratedVariable_I & Variable_I & VariableBase_I @node(additionalLabels: ["Variable","VariableBase"]){
                hasCharacteristic: Characteristic @relationship(type: "oeso:hasCharacteristic", direction: OUT)
                hasEntity: Entity @relationship(type: "oeso:hasEntity", direction: OUT)
                hasMethod: Method @relationship(type: "oeso:hasMethod", direction: OUT)
                hasUnit: Unit @relationship(type: "oeso:hasUnit", direction: OUT)
            }            
            
            interface Entity_Iimplements VariableBase_I {
                
            } 

            type Entity implements Entity_I & VariableBase_I @node(additionalLabels: ["VariableBase"]){
                
            }            
            
            interface Equipement_Iimplements ExperimentalCondition_I {
                
            } 

            type Equipement implements Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["ExperimentalCondition"]){
                
            }            
            
            interface ExperimentalCondition_I  {
                
            } 

            type ExperimentalCondition implements ExperimentalCondition_I {
                
            }            
            
            interface ExperimentalProtocol_Iimplements TechnicalDocument_I & Document_I {
                
            } 

            type ExperimentalProtocol implements ExperimentalProtocol_I & TechnicalDocument_I & Document_I @node(additionalLabels: ["TechnicalDocument","Document"]){
                
            }            
            
            interface Facility_I  {
                
            } 

            type Facility implements Facility_I {
                
            }            
            
            interface Factor_Iimplements ExperimentalCondition_I {
                
            } 

            type Factor implements Factor_I & ExperimentalCondition_I @node(additionalLabels: ["ExperimentalCondition"]){
                
            }            
            
            interface FactorLevel_Iimplements ExperimentalCondition_I {
                
            } 

            type FactorLevel implements FactorLevel_I & ExperimentalCondition_I @node(additionalLabels: ["ExperimentalCondition"]){
                
            }            
            
            interface Field_Iimplements CultivatedLand_I & StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type Field implements Field_I & CultivatedLand_I & StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["CultivatedLand","StructuralArea","Area","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface FloodableArea_Iimplements StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type FloodableArea implements FloodableArea_I & StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["StructuralArea","Area","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface ITKDocument_Iimplements TechnicalDocument_I & Document_I {
                
            } 

            type ITKDocument implements ITKDocument_I & TechnicalDocument_I & Document_I @node(additionalLabels: ["TechnicalDocument","Document"]){
                
            }            
            
            interface Image_Iimplements Datafile_I {
                
            } 

            type Image implements Image_I & Datafile_I @node(additionalLabels: ["Datafile"]){
                
            }            
            
            interface ImageAcquisition_Iimplements Activity_I {
                endedAtTime: String
                startedAtTime: String
            } 

            type ImageAcquisition implements ImageAcquisition_I & Activity_I @node(additionalLabels: ["Activity"]){
                endedAtTime: String
                startedAtTime: String
            }            
            
            interface ImageAnalysis_Iimplements Activity_I {
                endedAtTime: String
                startedAtTime: String
            } 

            type ImageAnalysis implements ImageAnalysis_I & Activity_I @node(additionalLabels: ["Activity"]){
                endedAtTime: String
                startedAtTime: String
            }            
            
            interface InfrastructureFacility_I  {
                
            } 

            type InfrastructureFacility implements InfrastructureFacility_I {
                
            }            
            
            interface InfrastructureTeam_Iimplements Group_I {
                
            } 

            type InfrastructureTeam implements InfrastructureTeam_I & Group_I @node(additionalLabels: ["Group"]){
                
            }            
            
            interface InteractiveResource_Iimplements Document_I {
                
            } 

            type InteractiveResource implements InteractiveResource_I & Document_I @node(additionalLabels: ["Document"]){
                
            }            
            
            interface LimestoneArea_Iimplements SoilArea_I & StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type LimestoneArea implements LimestoneArea_I & SoilArea_I & StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["SoilArea","StructuralArea","Area","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface MeasuresAcquisition_Iimplements Activity_I {
                endedAtTime: String
                startedAtTime: String
            } 

            type MeasuresAcquisition implements MeasuresAcquisition_I & Activity_I @node(additionalLabels: ["Activity"]){
                endedAtTime: String
                startedAtTime: String
            }            
            
            interface Method_Iimplements VariableBase_I {
                
            } 

            type Method implements Method_I & VariableBase_I @node(additionalLabels: ["VariableBase"]){
                
            }            
            
            interface Multimedia_Iimplements Document_I {
                
            } 

            type Multimedia implements Multimedia_I & Document_I @node(additionalLabels: ["Document"]){
                
            }            
            
            interface Operator_Iimplements Agent_I {
                
            } 

            type Operator implements Operator_I & Agent_I @node(additionalLabels: ["Agent"]){
                
            }            
            
            interface Population_Iimplements ScientificObject_I {
                
            } 

            type Population implements Population_I & ScientificObject_I @node(additionalLabels: ["ScientificObject"]){
                
            }            
            
            interface ProtectedStructure_Iimplements Equipement_I & ExperimentalCondition_I {
                
            } 

            type ProtectedStructure implements ProtectedStructure_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Equipement","ExperimentalCondition"]){
                
            }            
            
            interface Provenance_I  {
                
            } 

            type Provenance implements Provenance_I {
                
            }            
            
            interface Publication_Iimplements ScientificDocument_I & Document_I {
                
            } 

            type Publication implements Publication_I & ScientificDocument_I & Document_I @node(additionalLabels: ["ScientificDocument","Document"]){
                
            }            
            
            interface RGBImage_Iimplements Image_I & Datafile_I {
                
            } 

            type RGBImage implements RGBImage_I & Image_I & Datafile_I @node(additionalLabels: ["Image","Datafile"]){
                
            }            
            
            interface Report_Iimplements ScientificDocument_I & Document_I {
                
            } 

            type Report implements Report_I & ScientificDocument_I & Document_I @node(additionalLabels: ["ScientificDocument","Document"]){
                
            }            
            
            interface Sample_Iimplements ScientificObject_I {
                
            } 

            type Sample implements Sample_I & ScientificObject_I @node(additionalLabels: ["ScientificObject"]){
                
            }            
            
            interface ScientificDocument_Iimplements Document_I {
                
            } 

            type ScientificDocument implements ScientificDocument_I & Document_I @node(additionalLabels: ["Document"]){
                
            }            
            
            interface Shed_Iimplements ProtectedStructure_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type Shed implements Shed_I & ProtectedStructure_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["ProtectedStructure","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface ShinyAppPackage_Iimplements InteractiveResource_I & Document_I {
                
            } 

            type ShinyAppPackage implements ShinyAppPackage_I & InteractiveResource_I & Document_I @node(additionalLabels: ["InteractiveResource","Document"]){
                
            }            
            
            interface Software_Iimplements Device_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type Software implements Software_I & Device_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Device","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface SoilArea_Iimplements StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type SoilArea implements SoilArea_I & StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["StructuralArea","Area","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface Species_Iimplements Germplasm_I {
                fromInstitute: Thing @relationship(type: "oeso:fromInstitute", direction: OUT)
            } 

            type Species implements Species_I & Germplasm_I @node(additionalLabels: ["Germplasm"]){
                fromInstitute: Thing @relationship(type: "oeso:fromInstitute", direction: OUT)
            }            
            
            interface Station_Iimplements Device_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type Station implements Station_I & Device_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Device","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface StructuralArea_Iimplements Area_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type StructuralArea implements StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Area","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface TechnicalDocument_Iimplements Document_I {
                
            } 

            type TechnicalDocument implements TechnicalDocument_I & Document_I @node(additionalLabels: ["Document"]){
                
            }            
            
            interface TemporalArea_Iimplements Area_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type TemporalArea implements TemporalArea_I & Area_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Area","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface Trait_I  {
                
            } 

            type Trait implements Trait_I {
                
            }            
            
            interface Treatment_Iimplements ExperimentalCondition_I {
                
            } 

            type Treatment implements Treatment_I & ExperimentalCondition_I @node(additionalLabels: ["ExperimentalCondition"]){
                
            }            
            
            interface VariableBase_I  {
                
            } 

            type VariableBase implements VariableBase_I {
                
            }            
            
            interface VariablesGroup_Iimplements Bag_I {
                
            } 

            type VariablesGroup implements VariablesGroup_I & Bag_I @node(additionalLabels: ["Bag"]){
                
            }            
            
            interface Vector_Iimplements Device_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type Vector implements Vector_I & Device_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["Device","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface WebSite_Iimplements InteractiveResource_I & Document_I {
                
            } 

            type WebSite implements WebSite_I & InteractiveResource_I & Document_I @node(additionalLabels: ["InteractiveResource","Document"]){
                
            }            
            
            interface WindyArea_Iimplements StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I {
                
            } 

            type WindyArea implements WindyArea_I & StructuralArea_I & Area_I & Equipement_I & ExperimentalCondition_I @node(additionalLabels: ["StructuralArea","Area","Equipement","ExperimentalCondition"]){
                
            }            
            
            interface Bag_I  {
                
            } 

            type Bag implements Bag_I {
                
            }            
            
            interface DatatypeProperty_I  {
                
            } 

            type DatatypeProperty implements DatatypeProperty_I {
                
            }            
            
            interface Agent_I  {
                
            } 

            type Agent implements Agent_I {
                
            }            
            
            interface Entity_I  {
                
            } 

            type Entity implements Entity_I {
                
            }            
            
            interface Person_Iimplements Agent_I {
                
            } 

            type Person implements Person_I & Agent_I @node(additionalLabels: ["Agent"]){
                
            }            
            
            interface SoftwareAgent_Iimplements Agent_I {
                
            } 

            type SoftwareAgent implements SoftwareAgent_I & Agent_I @node(additionalLabels: ["Agent"]){
                
            }            
            
            interface Agent_I  {
                
            } 

            type Agent implements Agent_I {
                
            }            
            