
            type owl__Thing {
                uri: ID! 
                oeso__hasDocument: oeso__Document @relationship(type: "oeso__hasDocument", direction: OUT)
            }            
            
            type undefined__TimeState @node(additionalLabels: ["undefined__State"]){
                uri: ID! 
                undefined__sourceDate: String
                undefined__sourceDateEnd: String
                undefined__sourceDateStart: String
            }            
            
            type undefined__Annotation {
                uri: ID! 
                undefined__motivatedBy: undefined__Motivation @relationship(type: "undefined__motivatedBy", direction: OUT)
                undefined__styledBy: undefined__Style @relationship(type: "undefined__styledBy", direction: OUT)
                undefined__bodyValue: String
            }            
            
            type undefined__SpecificResource @node(additionalLabels: ["undefined__ResourceSelection"]){
                uri: ID! 
                undefined__styleClass: String
                undefined__hasSelector: undefined__Selector @relationship(type: "undefined__hasSelector", direction: OUT)
                undefined__hasState: undefined__State @relationship(type: "undefined__hasState", direction: OUT)
            }            
            
            type undefined__ResourceSelection {
                uri: ID! 
                undefined__hasSelector: undefined__Selector @relationship(type: "undefined__hasSelector", direction: OUT)
                undefined__hasState: undefined__State @relationship(type: "undefined__hasState", direction: OUT)
            }            
            
            type undefined__RangeSelector @node(additionalLabels: ["undefined__Selector"]){
                uri: ID! 
                undefined__hasEndSelector: undefined__Selector @relationship(type: "undefined__hasEndSelector", direction: OUT)
                undefined__hasStartSelector: undefined__Selector @relationship(type: "undefined__hasStartSelector", direction: OUT)
            }            
            
            type rdfs__Resource {
                uri: ID! 
            }            
            
            type skos__Concept {
                uri: ID! 
            }            
            
            type undefined__OrderedCollection {
                uri: ID! 
            }            
            
            type undefined__Choice @node(additionalLabels: ["undefined__OrderedCollection"]){
                uri: ID! 
            }            
            
            type undefined__CssSelector @node(additionalLabels: ["undefined__Selector"]){
                uri: ID! 
            }            
            
            type undefined__CssStyle @node(additionalLabels: ["undefined__Style"]){
                uri: ID! 
            }            
            
            type undefined__DataPositionSelector @node(additionalLabels: ["undefined__Selector"]){
                uri: ID! 
            }            
            
            type undefined__Direction {
                uri: ID! 
            }            
            
            type undefined__FragmentSelector @node(additionalLabels: ["undefined__Selector"]){
                uri: ID! 
            }            
            
            type undefined__HttpRequestState @node(additionalLabels: ["undefined__State"]){
                uri: ID! 
            }            
            
            type undefined__Motivation @node(additionalLabels: ["skos__Concept"]){
                uri: ID! 
            }            
            
            type undefined__Selector {
                uri: ID! 
            }            
            
            type undefined__State {
                uri: ID! 
            }            
            
            type undefined__Style {
                uri: ID! 
            }            
            
            type undefined__SvgSelector @node(additionalLabels: ["undefined__Selector"]){
                uri: ID! 
            }            
            
            type undefined__TextPositionSelector @node(additionalLabels: ["undefined__Selector"]){
                uri: ID! 
            }            
            
            type undefined__TextQuoteSelector @node(additionalLabels: ["undefined__Selector"]){
                uri: ID! 
            }            
            
            type undefined__TextualBody {
                uri: ID! 
            }            
            
            type undefined__XPathSelector @node(additionalLabels: ["undefined__Selector"]){
                uri: ID! 
            }            
            
            type undefined__Person {
                uri: ID! 
            }            
            
            type oeev__Association @node(additionalLabels: ["oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__associatedWith: Thing @relationship(type: "oeev__associatedWith", direction: OUT)
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__AssociationWithScientificObject @node(additionalLabels: ["oeev__Association","oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__associatedWithScientificObject: oeso__ScientificObject @relationship(type: "oeev__associatedWithScientificObject", direction: OUT)
                oeev__associatedWith: Thing @relationship(type: "oeev__associatedWith", direction: OUT)
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__AssociationWithSensingDevice @node(additionalLabels: ["oeev__Association","oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__associatedWithSensingDevice: oeso__SensingDevice @relationship(type: "oeev__associatedWithSensingDevice", direction: OUT)
                oeev__associatedWith: Thing @relationship(type: "oeev__associatedWith", direction: OUT)
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Event {
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__PestAttack @node(additionalLabels: ["oeev__Incident","oeev__Trouble","oeev__Event"]){
                uri: ID! 
                oeev__hasPest: oeev__Pest @relationship(type: "oeev__hasPest", direction: OUT)
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__AddingProduct @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__AutomaticCalibration @node(additionalLabels: ["oeev__Calibration","oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Breakdown @node(additionalLabels: ["oeev__Trouble","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Calibration @node(additionalLabels: ["oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Checking @node(additionalLabels: ["oeev__Servicing","oeev__Operability","oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Cleaning @node(additionalLabels: ["oeev__Servicing","oeev__Operability","oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Clipping @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__CorrectiveMaintenance @node(additionalLabels: ["oeev__Operability","oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__CurativeTreatment @node(additionalLabels: ["oeev__Treatment","oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Detasseling @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Dysfunction @node(additionalLabels: ["oeev__Trouble","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__EvolutiveMaintenance @node(additionalLabels: ["oeev__Operability","oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__FacilityManagement @node(additionalLabels: ["oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Fertilization @node(additionalLabels: ["oeev__AddingProduct","oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Harvesting @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Incident @node(additionalLabels: ["oeev__Trouble","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Installation @node(additionalLabels: ["oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Irrigation @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Loading @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Lodging @node(additionalLabels: ["oeev__Incident","oeev__Trouble","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__ManualCalibration @node(additionalLabels: ["oeev__Calibration","oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Move @node(additionalLabels: ["oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Operability @node(additionalLabels: ["oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Pest {
                uri: ID! 
            }            
            
            type oeev__Flooding @node(additionalLabels: ["oeev__Incident","oeev__Trouble","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__PhenologyScoring @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__PotFall @node(additionalLabels: ["oeev__Incident","oeev__Trouble","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Potting @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__PreventativeTreatment @node(additionalLabels: ["oeev__Treatment","oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Reparation @node(additionalLabels: ["oeev__CorrectiveMaintenance","oeev__Operability","oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Restart @node(additionalLabels: ["oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Sampling @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__ScientificObjectManagement @node(additionalLabels: ["oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Servicing @node(additionalLabels: ["oeev__Operability","oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Sowing @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Staking @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Start @node(additionalLabels: ["oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Stop @node(additionalLabels: ["oeev__FacilityManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__StuckPlant @node(additionalLabels: ["oeev__Incident","oeev__Trouble","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Thinning @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Treatment @node(additionalLabels: ["oeev__ScientificObjectManagement","oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeev__Trouble @node(additionalLabels: ["oeev__Event"]){
                uri: ID! 
                oeev__concerns: String
                oeev__isInstant: String
            }            
            
            type oeso__Germplasm {
                uri: ID! 
                oeso__fromInstitute: Thing @relationship(type: "oeso__fromInstitute", direction: OUT)
            }            
            
            type oeso__Variable @node(additionalLabels: ["oeso__VariableBase"]){
                uri: ID! 
                oeso__hasCharacteristic: oeso__Characteristic @relationship(type: "oeso__hasCharacteristic", direction: OUT)
                oeso__hasEntity: oeso__Entity @relationship(type: "oeso__hasEntity", direction: OUT)
                oeso__hasEntityOfInterest: oeso__EntityOfInterest @relationship(type: "oeso__hasEntityOfInterest", direction: OUT)
                oeso__hasMethod: oeso__Method @relationship(type: "oeso__hasMethod", direction: OUT)
                oeso__hasUnit: oeso__Unit @relationship(type: "oeso__hasUnit", direction: OUT)
            }            
            
            type oeso__ScientificObject {
                uri: ID! 
                oeso__hasCreationDate: String
                oeso__hasDestructionDate: String
            }            
            
            type oeso__Experiment {
                uri: ID! 
                oeso__hasProject: oeso__Project @relationship(type: "oeso__hasProject", direction: OUT)
                oeso__hasScientificSupervisor: undefined__Agent @relationship(type: "oeso__hasScientificSupervisor", direction: OUT)
                oeso__hasTechnicalSupervisor: undefined__Agent @relationship(type: "oeso__hasTechnicalSupervisor", direction: OUT)
                oeso__studyEffectOf: oeso__Factor @relationship(type: "oeso__studyEffectOf", direction: OUT)
                oeso__usesFacility: oeso__Facility @relationship(type: "oeso__usesFacility", direction: OUT)
                oeso__usesOrganization: undefined__Organization @relationship(type: "oeso__usesOrganization", direction: OUT)
            }            
            
            type undefined__Organization @node(additionalLabels: ["oeso__ExperimentalCondition"]){
                uri: ID! 
                oeso__isHosted: oeso__Facility @relationship(type: "oeso__isHosted", direction: OUT)
            }            
            
            type oeso__SensingDevice @node(additionalLabels: ["oeso__Device","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
                oeso__measures: oeso__Variable @relationship(type: "oeso__measures", direction: OUT)
            }            
            
            type oeso__Unit @node(additionalLabels: ["oeso__VariableBase"]){
                uri: ID! 
                oeso__hasAlternativeSymbol: String
                oeso__hasSymbol: String
            }            
            
            type oeso__Project @node(additionalLabels: ["oeso__ExperimentalCondition"]){
                uri: ID! 
                oeso__hasObjective: String
            }            
            
            type undefined__Activity {
                uri: ID! 
                undefined__endedAtTime: String
                undefined__startedAtTime: String
            }            
            
            type undefined__Group {
                uri: ID! 
            }            
            
            type undefined__GroupUserProfile {
                uri: ID! 
            }            
            
            type undefined__Profile {
                uri: ID! 
            }            
            
            type oeso__Actuator @node(additionalLabels: ["oeso__Device","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__AdministrativeDocument @node(additionalLabels: ["oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__Archive @node(additionalLabels: ["oeso__Datafile"]){
                uri: ID! 
            }            
            
            type oeso__Area @node(additionalLabels: ["oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__Characteristic @node(additionalLabels: ["oeso__VariableBase"]){
                uri: ID! 
            }            
            
            type oeso__ClayeyArea @node(additionalLabels: ["oeso__SoilArea","oeso__StructuralArea","oeso__Area","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__Compartment @node(additionalLabels: ["oeso__Facility"]){
                uri: ID! 
            }            
            
            type oeso__Computation @node(additionalLabels: ["undefined__Activity"]){
                uri: ID! 
                undefined__endedAtTime: String
                undefined__startedAtTime: String
            }            
            
            type oeso__ControlLaw @node(additionalLabels: ["oeso__Device","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__Datafile {
                uri: ID! 
            }            
            
            type oeso__Dataset @node(additionalLabels: ["oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__Device @node(additionalLabels: ["oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__Document {
                uri: ID! 
            }            
            
            type oeso__ElaboratedVariable @node(additionalLabels: ["oeso__Variable","oeso__VariableBase"]){
                uri: ID! 
                oeso__hasCharacteristic: oeso__Characteristic @relationship(type: "oeso__hasCharacteristic", direction: OUT)
                oeso__hasEntity: oeso__Entity @relationship(type: "oeso__hasEntity", direction: OUT)
                oeso__hasEntityOfInterest: oeso__EntityOfInterest @relationship(type: "oeso__hasEntityOfInterest", direction: OUT)
                oeso__hasMethod: oeso__Method @relationship(type: "oeso__hasMethod", direction: OUT)
                oeso__hasUnit: oeso__Unit @relationship(type: "oeso__hasUnit", direction: OUT)
            }            
            
            type oeso__Entity @node(additionalLabels: ["oeso__VariableBase"]){
                uri: ID! 
            }            
            
            type oeso__EntityOfInterest @node(additionalLabels: ["oeso__VariableBase"]){
                uri: ID! 
            }            
            
            type oeso__Equipement @node(additionalLabels: ["oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__ExperimentalCondition {
                uri: ID! 
            }            
            
            type oeso__ExperimentalProtocol @node(additionalLabels: ["oeso__TechnicalDocument","oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__ExperimentalUnit @node(additionalLabels: ["undefined__Organization","oeso__ExperimentalCondition"]){
                uri: ID! 
                oeso__isHosted: oeso__Facility @relationship(type: "oeso__isHosted", direction: OUT)
            }            
            
            type oeso__Facility {
                uri: ID! 
            }            
            
            type oeso__Factor @node(additionalLabels: ["oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__FactorLevel @node(additionalLabels: ["oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__FloodableArea @node(additionalLabels: ["oeso__StructuralArea","oeso__Area","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__ITKDocument @node(additionalLabels: ["oeso__TechnicalDocument","oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__Image @node(additionalLabels: ["oeso__Datafile"]){
                uri: ID! 
            }            
            
            type oeso__ImageAcquisition @node(additionalLabels: ["undefined__Activity"]){
                uri: ID! 
                undefined__endedAtTime: String
                undefined__startedAtTime: String
            }            
            
            type oeso__ImageAnalysis @node(additionalLabels: ["undefined__Activity"]){
                uri: ID! 
                undefined__endedAtTime: String
                undefined__startedAtTime: String
            }            
            
            type oeso__Installation @node(additionalLabels: ["undefined__Organization","oeso__ExperimentalCondition"]){
                uri: ID! 
                oeso__isHosted: oeso__Facility @relationship(type: "oeso__isHosted", direction: OUT)
            }            
            
            type oeso__InteractiveResource @node(additionalLabels: ["oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__LimestoneArea @node(additionalLabels: ["oeso__SoilArea","oeso__StructuralArea","oeso__Area","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__MeasuresAcquisition @node(additionalLabels: ["undefined__Activity"]){
                uri: ID! 
                undefined__endedAtTime: String
                undefined__startedAtTime: String
            }            
            
            type oeso__Method @node(additionalLabels: ["oeso__VariableBase"]){
                uri: ID! 
            }            
            
            type oeso__Multimedia @node(additionalLabels: ["oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__Operator @node(additionalLabels: ["undefined__Agent"]){
                uri: ID! 
            }            
            
            type oeso__Population @node(additionalLabels: ["oeso__ScientificObject"]){
                uri: ID! 
                oeso__hasCreationDate: String
                oeso__hasDestructionDate: String
            }            
            
            type oeso__Provenance {
                uri: ID! 
            }            
            
            type oeso__Publication @node(additionalLabels: ["oeso__ScientificDocument","oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__RGBImage @node(additionalLabels: ["oeso__Image","oeso__Datafile"]){
                uri: ID! 
            }            
            
            type oeso__Report @node(additionalLabels: ["oeso__ScientificDocument","oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__ResearchUnit @node(additionalLabels: ["undefined__Organization","oeso__ExperimentalCondition"]){
                uri: ID! 
                oeso__isHosted: oeso__Facility @relationship(type: "oeso__isHosted", direction: OUT)
            }            
            
            type oeso__Sample @node(additionalLabels: ["oeso__ScientificObject"]){
                uri: ID! 
                oeso__hasCreationDate: String
                oeso__hasDestructionDate: String
            }            
            
            type oeso__ScientificDocument @node(additionalLabels: ["oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__Shed @node(additionalLabels: ["oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__ShinyAppPackage @node(additionalLabels: ["oeso__InteractiveResource","oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__Software @node(additionalLabels: ["oeso__Device","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__SoilArea @node(additionalLabels: ["oeso__StructuralArea","oeso__Area","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__Species @node(additionalLabels: ["oeso__Germplasm"]){
                uri: ID! 
                oeso__fromInstitute: Thing @relationship(type: "oeso__fromInstitute", direction: OUT)
            }            
            
            type oeso__Station @node(additionalLabels: ["oeso__Device","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__StructuralArea @node(additionalLabels: ["oeso__Area","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__TechnicalDocument @node(additionalLabels: ["oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__TemporalArea @node(additionalLabels: ["oeso__Area","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__Trait {
                uri: ID! 
            }            
            
            type oeso__Treatment @node(additionalLabels: ["oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__VariableBase {
                uri: ID! 
            }            
            
            type oeso__VariablesGroup @node(additionalLabels: ["ns__Bag"]){
                uri: ID! 
            }            
            
            type oeso__Vector @node(additionalLabels: ["oeso__Device","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type oeso__WebSite @node(additionalLabels: ["oeso__InteractiveResource","oeso__Document"]){
                uri: ID! 
            }            
            
            type oeso__WindyArea @node(additionalLabels: ["oeso__StructuralArea","oeso__Area","oeso__Equipement","oeso__ExperimentalCondition"]){
                uri: ID! 
            }            
            
            type ns__Bag {
                uri: ID! 
            }            
            
            type owl__DatatypeProperty {
                uri: ID! 
            }            
            
            type undefined__Agent {
                uri: ID! 
            }            
            
            type undefined__Entity {
                uri: ID! 
            }            
            
            type undefined__Person @node(additionalLabels: ["undefined__Agent"]){
                uri: ID! 
            }            
            
            type undefined__SoftwareAgent @node(additionalLabels: ["undefined__Agent"]){
                uri: ID! 
            }            
            